{"pageProps":{"num":"4","totalNum":69,"pagingSize":10,"allPages":7,"postDatas":[{"id":"经典轮播图的实现方案","desc":"传统方式\n\n项目地址\n\n传统方式实现轮播也算一个不小的工程量了，基本布局就是将所有的图片横向布局，并在首位分别克隆最后和第一张图片。当切换到克隆的图片时，并在动画播放快结束时，将这个图片队列复位。\n\n...","title":"经典轮播图的实现方案","date":"2021-02-09T13:37:00.000Z","tags":["Vue","JavaScript"],"categories":"实践","url":"classic-slidershow","index_img":"/images/经典轮播图的实现方案/logo.webp"},{"id":"路由中的动态组件-keepAlive与路由","desc":"真正的动态组件\n\n\\<keep-alive>经常配合componentIs来动态的切换组件，当组件再次被切换回来的时候，组件的状态依然被保存。\n\n\n\n在路由中的问题\n\n在研究动态组件\\<keep-al...","title":"路由中的动态组件-keepAlive与路由","date":"2021-01-24T11:01:30.000Z","tags":["JavaScript","Vue"],"categories":"笔记","url":"router-with-keepalive","index_img":"/images/路由中的动态组件-keepAlive与路由/logo.webp"},{"id":"构造函数与绑定this","desc":"丢失this\n\nthis 是整个 JavaScript 语言里最令人头疼的特性。在 JavaScript 中，this 是动态的，也就是说它在运行时是变化的。也正因这一特性，this 的变化难以预料，...","title":"构造函数与绑定this","date":"2020-12-31T09:04:40.000Z","tags":"JavaScript","categories":"实践","url":"constructor-and-bind-this","index_img":"/images/构造函数与绑定this/2020-12-31-10-11-54.webp"},{"id":"真的是在写JS-JavaScript的类","desc":"在 JavaScript 中所谓的类不过是 ECMAScript 2015 为其引入的语法糖。这个糖它只有甜味，它是构造函数的另一种写法，类语法不会为 JavaScript 引入新的面向对象的继承模型...","title":"真的是在写 JS - JavaScript 的类","date":"2020-12-30T11:14:16.000Z","tags":"JavaScript","categories":"笔记","url":"really-writing-js-javascriptclasses","index_img":"/images/真的是在写JS-JavaScript的类/2020-12-30-11-06-25.webp"},{"id":"某咸鱼的AJAX入门","desc":"Ajax\n\nAjax 是异步的 JavaScript 和 XML（Asynchronous JavaScript And XML）。简单点说，就是使用XMLHttpRequest对象与服务器通信。 它...","title":"某咸鱼的 AJAX 入门🐟","date":"2020-12-24T19:41:02.000Z","tags":"JavaScript","categories":"笔记","url":"ajax-getting-started","index_img":"/images/某咸鱼的AJAX入门/logo.webp"},{"id":"浏览器的老伙计-BOM","desc":"ECMAScript才是JavaScript的核心，在浏览器中，BOM无疑才是真正的核心（浏览器对象模型：BrowerObjectModel)。多年来，缺少事实上的规范导致BOM既有意思又有问题，因为...","title":"浏览器的老伙计-BOM","date":"2020-12-22T15:03:10.000Z","tags":"JavaScript","categories":"笔记","url":"browsers-old-friend-bom","index_img":"/images/浏览器的老伙计-BOM/logo.webp"},{"id":"JavaScript实践-乘法表","desc":"从学习js到现在，也有一段时间了。曾经也尝试过写一些复杂的实践。后来经过测试，就算在入门阶段到了会写，那么距离最优代码还是有一定的差距。可能隔个几天回来自己都看不懂自己写的是什么了，杂乱无章。\n\n最近...","title":"JavaScript 实践-乘法表","date":"2020-12-11T14:58:46.000Z","tags":"JavaScript","categories":"实践","url":"javascript-practice-multiplication-table","index_img":"/images/JavaScript实践-乘法表/logo.webp"},{"id":"Vue3中的响应数据","desc":"实时渲染\n\n在学习 Vue2.x 的过程中，做过一个更改数据从而触发实时渲染 DOM 的小实例。期间很顺利，而后在同样方法测试 Vue3 的时候发现遇到了一些不同的行为。根据查阅了一些文档以及源码，做...","title":"Vue3 中的响应数据","date":"2020-11-02T10:01:55.000Z","tags":["JavaScript","Vue"],"categories":"笔记","url":"response-data-in-Vue3","index_img":"/images/Vue3中的响应数据/logo.webp"},{"id":"JavaScript-可迭代对象与for-of","desc":"Iterable object（可迭代对象）\n\n可迭代（Iterable） 对象是数组的泛化。这个概念是说任何对象都可以被定制为可在for...of循环中使用的对象。数组是可迭代的。但不仅仅是数组，很...","title":"JavaScript-可迭代对象与 for-of","date":"2020-10-29T17:15:48.000Z","tags":"JavaScript","categories":"笔记","url":"javascript-iterable-object-and-for-of","index_img":"/images/JavaScript-可迭代对象与for-of/logo.webp"},{"id":"Vue.js-起步!","desc":"在我打算学习vue的时候，正是其3.0版本发布不久的时候。很庆幸生活在这个时代，但困扰我的是是否应该由旧版本的2.x开始学习？一向选择困难的我最终打算两个版本一起学习，从2.x开始入门，顺便还能一睹其...","title":"Vue.js-起步!","date":"2020-10-22T11:21:22.000Z","tags":["JavaScript","Vue"],"categories":"笔记","url":"Vue-js-get-started","index_img":"/images/Vue.js-起步!/logo.webp"}]},"__N_SSG":true}